{"version":3,"sources":["CardReader.js","CashAcceptor.js","CashDispencer.js","Options.js","POS.js","Printer.js","Products.js","ProductDispenser.js","App.js","index.js"],"names":["CardReader","className","Object","keys","map","key","values","value","CashAcceptor","CashDispencer","Options","useState","data","api","deviceTree","POS","options","merchantIdx","inputValue","setInputValue","isCheckType","deviceTreeTypeMap","type","onChange","event","target","inputHandler","placeholder","driver","modName","modVersion","port","status","Printer","Products","ProductDispenser","products","count","inputProductValue","setInputProoductValue","isProductType","parseInt","changeHandler","App","infoLoaded","setInfoLoaded","cardReaderLoaded","setCardReaderLoaded","loadedCashAcceptor","setLoadedCashAcceptor","loadedCashDispenser","setLoadedCashDispenser","loadedPOS","setloadedPOS","loadedPrinter","setLoadedPrinter","loadedProductDispenser","setLoadedProductDispenser","console","log","handleChange","loaded","setLoaded","onClick","CashDispenser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.46651986.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const CardReader = ( { CardReader } ) => {\n\n    return (\n        <>\n            <div className=\"card__reading\">\n                <div className=\"module\">\n                    {Object.keys(CardReader[0]).map(key => (\n                        <p key={key} className=\"module__key\">{key} :</p>\n                    ))}\n                </div>\n                <div className=\"module\">\n                    {Object.values(CardReader[0]).map(value => (\n                        <p key={value} className=\"module__value\">{value}</p>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from \"react\";\n\nexport const CashAcceptor = ({ CashAcceptor }) => {\n\n    return (\n        <>\n            <div className=\"card__reading\">\n                <div className=\"module\">\n                    {Object.keys(CashAcceptor[0]).map(key => (\n                        <p key={key} className=\"module__key\">{key} :</p>\n                    ))}\n                </div>\n                <div className=\"module\">\n                    {Object.values(CashAcceptor[0]).map(value => (\n                        <p key={value} className=\"module__value\">{value}</p>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nexport const CashDispencer = ({ CashDispencer }) => {\n\n    return (\n        <>\n            <div className=\"card__reading\">\n                <div className=\"module module__cash-dispenser\">\n                    {Object.keys(CashDispencer[0]).map(key => (\n                        <p key={key} className=\"module__key\">{key} :</p>\n                    ))}\n                </div>\n                <div className=\"module module__cash-dispenser\">\n                    {Object.values(CashDispencer[0]).map(value => (\n                        <p key={value} className=\"module__value\">{value}</p>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport data from \"./data.json\";\n\nexport const Options = () => {\n    const [inputValue, setInputValue] = useState(data.api.deviceTree.POS[0].options[1].merchantIdx);\n    const isCheckType = data.api.deviceTreeTypeMap.POS[0].options[1].merchantIdx;\n\n    const inputHandler = (event) => {\n        if (typeof inputValue === isCheckType) {\n            setInputValue(event.target.value);\n        }\n    }\n\n    return (\n        <>\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={inputValue}\n                onChange={(event) => inputHandler(event)}\n                placeholder=\"Please enter amount of money or product\"\n            />\n            </>\n    )\n}\n","import React from 'react';\nimport { Options } from './Options';\n\nexport const POS = ({ POS }) => {\n\n    return (\n        <>\n            <div className=\"card__reading\">\n                <div className=\"module\">\n                    {Object.keys(POS[0]).map(key => (\n                        <p key={key} className=\"module__key\">{key} :</p>\n                    ))}\n                </div>\n                <div className=\"module\">\n                    <p className=\"module__value\">{POS[0].driver}</p>\n                    <p className=\"module__value\">{POS[0].modName}</p>\n                    <p className=\"module__value\">{POS[0].modVersion}</p>\n                    <Options/>\n                    <p className=\"module__value\">{POS[0].port}</p>\n                    <p className=\"module__value\">{POS[0].status}</p>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React from 'react';\n\nexport const Printer = ({ Printer }) => {\n\n    return (\n        <>\n            <div className=\"card__reading\">\n                <div className=\"module\">\n                    {Object.keys(Printer[0]).map(key => (\n                        <p key={key} className=\"module__key\">{key} :</p>\n                    ))}\n                </div>\n                <div className=\"module\">\n                    {Object.values(Printer[0]).map(value => (\n                        <p key={value} className=\"module__value\">{value}</p>\n                    ))}\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, {useState} from \"react\";\nimport data from \"./data.json\";\n\n\nexport const Products = () => {\n    const [\n        inputProductValue,\n        setInputProoductValue\n    ] = useState(data\n        .api\n        .deviceTree\n        .ProductDispenser[0]\n        .products[0]\n        .count);\n\n    const isProductType = data\n        .api\n        .deviceTreeTypeMap\n        .ProductDispenser[0]\n        .products[0]\n        .count;\n\n    const changeHandler = (event) => {\n        if (typeof inputProductValue === isProductType) {\n            setInputProoductValue(parseInt(event.target.value) || 0);\n        }\n    }\n\n    return (\n        <>\n            <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"enter amount of...\"\n                onChange={(event) => changeHandler(event)}\n                value={inputProductValue}\n            />\n        </>\n    )\n}\n","import React from 'react';\nimport {Products} from \"./Products\";\n\nexport const ProductDispenser = ({ProductDispenser}) => {\n\n    return (\n        <>\n            <div className=\"card__reading\">\n                <div className=\"module\">\n                    {Object.keys(ProductDispenser[0]).map(key => (\n                        <p key={key} className=\"module__key\">{key} :</p>\n                    ))}\n                </div>\n                <div className=\"module\">\n                    <p className=\"module__value\">{ProductDispenser[0].driver}</p>\n                    <p className=\"module__value\">{ProductDispenser[0].modName}</p>\n                    <p className=\"module__value\">{ProductDispenser[0].modVersion}</p>\n                    <p className=\"module__value\">{ProductDispenser[0].port}</p>\n                    <Products/>\n                    <p className=\"module__value\">{ProductDispenser[0].status}</p>\n                </div>\n            </div>\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport data from './data.json';\nimport { CardReader } from './CardReader';\nimport { CashAcceptor } from './CashAcceptor';\nimport { CashDispencer } from './CashDispencer';\nimport { POS } from \"./POS\";\nimport { Printer } from \"./Printer\";\nimport { ProductDispenser } from \"./ProductDispenser\";\n\nfunction App() {\n    const deviceTree = data.api.deviceTree;\n    const [infoLoaded, setInfoLoaded] = useState(false);\n    const [cardReaderLoaded, setCardReaderLoaded] = useState(false);\n    const [loadedCashAcceptor, setLoadedCashAcceptor] = useState(false);\n    const [loadedCashDispenser, setLoadedCashDispenser] = useState(false);\n    const [loadedPOS, setloadedPOS] = useState(false);\n    const [loadedPrinter, setLoadedPrinter] = useState(false);\n    const [loadedProductDispenser, setLoadedProductDispenser] = useState(false);\n\n    console.log(deviceTree.ProductDispenser);\n\n    const handleChange = (loaded, setLoaded) => {\n        setLoaded(true);\n        if (loaded === true) {\n            setLoaded(false)\n        }\n    }\n\n    const handleLoadingInfo = () => {\n        handleChange(infoLoaded, setInfoLoaded)\n    }\n\n    const handleLoadingCardReader = () => {\n      handleChange(cardReaderLoaded, setCardReaderLoaded);\n    }\n\n    const handleLoadingCashAccpetor = () => {\n        handleChange(loadedCashAcceptor, setLoadedCashAcceptor);\n    }\n\n    const handleLoadingCashDispenser = () => {\n        handleChange(loadedCashDispenser, setLoadedCashDispenser);\n    }\n\n    const handleLoadingPOS = () => {\n        handleChange(loadedPOS, setloadedPOS);\n    }\n\n    const handleLoadingPrinter = () => {\n        handleChange(loadedPrinter, setLoadedPrinter);\n    }\n\n    const handleLoadingProductDispenser = () => {\n        handleChange(loadedProductDispenser, setLoadedProductDispenser);\n    }\n\n  return (\n    <div className=\"App\">\n        <button\n            type=\"button\"\n            className=\"buttons\"\n            onClick={() => handleLoadingInfo()}\n        >\n            INTERFACE\n        </button>\n        {\n            infoLoaded &&\n        <div className=\"App__components-container\">\n            <button\n                type=\"button\"\n                className=\"buttons\"\n                onClick={() => handleLoadingCardReader()}\n            >\n                CardReader\n            </button>\n            {cardReaderLoaded && <CardReader CardReader={deviceTree.CardReader} />\n            }\n            <button\n                type=\"button\"\n                className=\"buttons\"\n                onClick={() => handleLoadingCashAccpetor()}\n            >CashAcceptor</button>\n            {\n                loadedCashAcceptor &&\n                <CashAcceptor CashAcceptor={deviceTree.CashAcceptor} />\n            }\n            <button\n                type=\"button\"\n                className=\"buttons\"\n                onClick={() => handleLoadingCashDispenser()}\n            >\n                CashDispencer\n            </button>\n            {\n                loadedCashDispenser &&\n                <CashDispencer CashDispencer={deviceTree.CashDispenser} />\n            }\n            <button\n                type=\"button\"\n                className=\"buttons\"\n                onClick={() => handleLoadingPOS()}\n            >\n                POS\n            </button>\n            {loadedPOS && <POS POS={deviceTree.POS} />}\n            <button\n                type=\"button\"\n                className=\"buttons\"\n                onClick={() => handleLoadingPrinter()}\n            >\n                Printer\n            </button>\n            {loadedPrinter && <Printer Printer={deviceTree.Printer} />}\n            <button\n                type=\"button\"\n                className=\"buttons\"\n                onClick={() => handleLoadingProductDispenser()}\n            >ProductDispenser</button>\n            {\n                loadedProductDispenser && <ProductDispenser\n                    ProductDispenser={deviceTree.ProductDispenser}\n                />\n            }\n        </div>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}